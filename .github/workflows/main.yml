name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: prepare unit test
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r ./part_service/requirements.txt
          echo "TEST_BUILD = TRUE
          AMQP_URL=''
          POSTGRES_URL=''
          KEYCLOAK_ID=''
          KEYCLOAK_SECRET=''
          PARTS_URL=''
          KEYCLOAK_URL=''
          KEYCLOAK_REALM=''" > .env

      - name: prepare unit test
        run: |
          pip install -r ./repair_service/requirements.txt
      
      - name: run unit test
        run: |
          pytest ./repair_service/app/tests/unit

      - name: run unit test
        run: |
          pytest ./part_service/app/tests/unit

      - name: prepare e2e test
        run: |
          sudo docker build -t part-test ./part_service
          sleep 10
          docker run -e TEST_BUILD=TRUE -e AMQP_URL="" -e POSTGRES_URL="" -e KEYCLOAK_ID="" -e KEYCLOAK_SECRET="" -e KEYCLOAK_URL="" -e KEYCLOAK_REALM="" -d -p 81:80 part-test


      - name: prepare e2e test
        run: |
          sudo docker build -t repair-test ./repair_service
          sleep 10
          docker run -e TEST_BUILD=TRUE -e AMQP_URL="" -e PARTS_URL="" -e POSTGRES_URL="" -e KEYCLOAK_ID="" -e KEYCLOAK_SECRET="" -e KEYCLOAK_URL="" -e KEYCLOAK_REALM="" -d -p 82:80 repair-test
          sleep 25

      - name: show info
        run: |
          sudo docker ps -a

      - name: run e2e test
        run: |
          pytest ./part_service/app/tests/endpoint

      - name: run e2e test
        run: |
          pytest ./repair_service/app/tests/endpoint

  build-and-push:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/part-service ./part_service

      - name: Log in to Dockerhub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Tag to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/part-service:latest

      - name: Build docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YC_REGISTRY_ID }}/repair-service:latest ./repair_service

      - name: Login to YC REGISTRY
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Push to YC REGISTRY
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/repair-service:latest